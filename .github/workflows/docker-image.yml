name: publish docker image in Github Packages

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  publish-docker-image:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Explicit Docker Login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Login to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: . # The build context (usually the root of your repo)
          file: ./build-config/Dockerfile # Path to your Dockerfile (relative to the context)
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/monolithic-app-service:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_NAME: reactdocker-app
    needs: publish-docker-image
    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Azure Login
        uses: azure/login@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/monolithic-app-service:latest
          #publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          #images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'